from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from allpairspy import AllPairs
import openpyxl
from io import BytesIO
import logging
from messages import get_main_menu, get_back_menu

logger = logging.getLogger(__name__)

class PairwiseStates(StatesGroup):
    waiting_for_parameters = State()

async def pairwise_command(message: Message, state: FSMContext):
    await state.set_state(PairwiseStates.waiting_for_parameters)
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è pairwise —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
        "'–ø–∞—Ä–∞–º–µ—Ç—Ä1: –∑–Ω–∞—á–µ–Ω–∏–µ1, –∑–Ω–∞—á–µ–Ω–∏–µ2; –ø–∞—Ä–∞–º–µ—Ç—Ä2: –∑–Ω–∞—á–µ–Ω–∏–µ1, –∑–Ω–∞—á–µ–Ω–∏–µ2'\n"
        "–ü—Ä–∏–º–µ—Ä: 'os: mac, win; size: 1000, 1200'\n\n"
        "–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é'",
        reply_markup=get_back_menu()
    )

async def process_pairwise_parameters(message: Message, state: FSMContext):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
    if message.text == "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        await state.clear()
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ QA Helper Bot! ü§ñ\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç:",
            reply_markup=get_main_menu()
        )
        return
    
    try:
        # –ü–∞—Ä—Å–∏–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        parameters = {}
        input_text = message.text.strip()
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –ø–∞—Ä—ã –ø–∞—Ä–∞–º–µ—Ç—Ä: –∑–Ω–∞—á–µ–Ω–∏—è
        param_blocks = [block.strip() for block in input_text.split(';') if block.strip()]
        
        for block in param_blocks:
            if ':' not in block:
                await message.answer(
                    "‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–ø–∞—Ä–∞–º–µ—Ç—Ä: –∑–Ω–∞—á–µ–Ω–∏–µ1, –∑–Ω–∞—á–µ–Ω–∏–µ2'",
                    reply_markup=get_back_menu()
                )
                return
                
            param_name, values_str = block.split(':', 1)
            param_name = param_name.strip()
            values = [v.strip() for v in values_str.split(',') if v.strip()]
            
            if not param_name or not values:
                await message.answer(
                    "‚ùå –û—à–∏–±–∫–∞: –ø–∞—Ä–∞–º–µ—Ç—Ä –∏ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏",
                    reply_markup=get_back_menu()
                )
                return
                
            parameters[param_name] = values
        
        if not parameters:
            await message.answer(
                "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞.",
                reply_markup=get_back_menu()
            )
            return
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
        pairwise_combinations = list(AllPairs(parameters.values()))
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç
        report = (
            f"üîπ <b>Pairwise —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</b>\n\n"
            f"<b>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n" +
            "\n".join(f"‚Ä¢ {param}: {', '.join(values)}" for param, values in parameters.items()) +
            f"\n\n<b>–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤:</b> {len(pairwise_combinations)}"
        )
        
        # –°–æ–∑–¥–∞–µ–º Excel —Ñ–∞–π–ª
        wb = openpyxl.Workbook()
        ws = wb.active
        ws.title = "Pairwise Tests"
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        ws.append(["–ü–∞—Ä–∞–º–µ—Ç—Ä", "–ó–Ω–∞—á–µ–Ω–∏—è"])
        for param, values in parameters.items():
            ws.append([param, ", ".join(values)])
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ—Å—Ç—ã
        ws.append([])
        ws.append(["–¢–µ—Å—Ç #"] + list(parameters.keys()))
        for i, test in enumerate(pairwise_combinations, 1):
            ws.append([i] + list(test))
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±—É—Ñ–µ—Ä
        excel_buffer = BytesIO()
        wb.save(excel_buffer)
        excel_buffer.seek(0)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await message.answer(report, parse_mode="HTML")
        await message.answer_document(
            document=excel_buffer,
            filename="pairwise_tests.xlsx",
            caption="Excel —Ñ–∞–π–ª —Å —Ç–µ—Å—Ç–∞–º–∏",
            reply_markup=get_main_menu()
        )
        
    except Exception as e:
        logger.error(f"Pairwise error: {e}", exc_info=True)
        await message.answer(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞.",
            reply_markup=get_back_menu()
        )
    
    await state.clear()